// app/admin/workflows/types/index.ts
// The local Prompt type definition has been removed.
// Components should now import Prompt from '../../../prompts/types'.

export type StepType = 'human-action' | 'ai-prompt' | 'tool-usage' | 'decision-point' | 'sub-workflow';

export interface Step {
  id: string;
  title: string;
  description: string;
  type: StepType;
  skippable?: boolean;
  estimatedDuration?: string; // e.g., "2 hours", "30 minutes"
  assignedTo?: string; // User or role ID
  inputs?: Record<string, any>; // Expected inputs for the step
  outputs?: Record<string, any>; // Outputs generated by the step
  prompt?: string; // Prompt ID (string) or potentially a full Prompt object from ../../../prompts/types
                  // The actual structure of step.prompt (ID vs object) needs to be consistent
                  // with how it's stored in Firestore and handled by workflowService.ts.
                  // For now, assuming it could be just an ID string that gets resolved.
  toolId?: string; // If type is 'tool-usage', reference to an AVAILABLE_TOOL
  dependencies?: string[]; // Array of Step IDs this step depends on
  subWorkflowId?: string; // If type is 'sub-workflow'
  // For decision points
  conditions?: { condition: string; nextStepId: string }[];
  defaultNextStepId?: string; // If no conditions met
}

export interface Workflow {
  id: string;
  title: string;
  description: string;
  authorId: string;
  version: string;
  createdAt: string | Date; // ISO string or Date object
  updatedAt: string | Date; // ISO string or Date object
  tags?: string[];
  steps: Step[];
  // Could include startingStepId, overall status, etc.
}

// Add other types if any from the original file.
console.log("workflow types/index.ts placeholder loaded.");
